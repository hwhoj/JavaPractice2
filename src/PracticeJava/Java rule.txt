・기본형 타입은 메모리를 확보하고, 그 메모리에 값을 저장한다.
・기본형 타입 은 소문자로 시작한다.
ex) int, bite, short, long...

・기본형이 아닌 타입은 모두 참조형(레퍼런스 타입)이라고 한다.
ex) Book b = new Book();  // Book 기본형이 아닌 타입

・기본형이 아닌 타입은 첫글자가 대문자이다.
ex)Class, Interface...

・기본형이 아닌 타입은 값을 가지지 않고 어딘가에 있는 값을 참조한다.

・int i = 1;
 -i: 변수 i라고 말한다. 변수는 하나의 값을 가질 수 있는 공간 이라고 말한다. 여기서 공간이란 메모리의 어떤 영역을 말한다.
    i는 변수의 이름,즉 변수명이라고 한다.
 -1: "정수 리터럴(literal) 1"이라고 말한다. 리터럴이란 변수에 입력되는 값을 말한다.

・변수명의 규칙 - 변수명은 아무 이름이나 될 수 없다.
 -하나 이상의 글자로 이루어져야 한다.
 -첫번 째 글자는 문자 이거나 '$', '_' 이어야 한다.
 -두번째 이후의 글자는 숫자, 문자 '$', '_' 이어야 한다.
 -'$', '_'이외의 특수문자 사용은 불가능하다.
 -길이 제한이 없다.
 -키워드는 변수명으로 사용할 수 없다.
 -상수 값을 표현하는 단어 true, false, null은 변수명으로 사용할 수 없다.

・정수타입 변수 x,y,z를 선언하려면?
int x;
int y;
int z;
또는
int x, y, z;
 - 정수 타입 변수를 선언할 때 초기값을 넣어주지 않으면 모두 0을 가지게 된다.

・자바의 타입에는 기본형 타입(primitive type)과 레퍼런스 타입(reference type) 2가지 종류가 있다.
 - 기본형 타입은 논리형, 문자형, 정수형, 실수형이 존재한다.
 - 기본형 타입 중 논리형 타입은 boolean 키워드를 사용한다.
 - 기본형 타입 중 정수형 타입은 byte, short, int, long 키워드를 사용한다.
 - 기본형 타입 중 실수형 타입은 float, double 키워드를 사용한다.
 - 기본형 타입 중 문자형 타입은 char 키워드를 사용한다.
 - 이를 제외한 모든 타입은 레퍼런스 타입이다.
 - 소문자로 시작하는것은 기본형 타입이고, 대문자로 시작하는것은 레퍼런스 타입이라고 생각하면 편리

・참인가? 거짓인가?
 - 프로그래밍은 어떤 조건에 따라서 다르게 동작하게 코드를 작성하는 경우가 많다.
 - 온도가 30도 이상일 때 동작한다, 가격이 5000원 이하일 때 동작한다. 등의 표현을 보면
   "30도 이상", "5000원 이하"가 조건이라고 볼 수 있다. 이러한 조건의 결과는 참(true)이나 거짓(false)이 나오게 된다.
   (true, false는 자바에서 미리 정의한 예약어이다.)
 - 이러한 참이나 거짓을 저장하는 변수를 논리형 타입 변수라고 한다.

・논리형 type boolean 사용하기
 - boolean 타입은 true, false 2가지 값중에 하나를 가질 수 있다.
 - 초기화 하지 않으면 기본적으로 false 값을 가진다. 참고로 메소드 안에서는 변수를 선언한 후 초기화 하지 않고
   사용하면 java: varialbe 변수명 might not have been initailized와 같은 오류가 발생한다.
   ※메소드 안에서 선언된 변수 = 지역변수, 지역변수는 반드시 초기화를 하고 사용해야한다.
    클래스 안에 선언된 변수 = field라고 말하고 초기화를 하지않아도 사용 가능하다.

・논리형 타입을 사용하는 경우
 - 논리형 타입 변수는 논리연산의 결과를 저장할 때 사용한다.
 - 논리연산이란 무엇일까? 예를들어 'a라는 변수가 10보다 크고 30보다 작을 경우' 라는 조건이 있을 때,
   이러한 조건의 결과가 저장되는 변수가 논리형 타입 변수이다.
 - a가 만약 20이라면 true가 되겠고, a가 5라면 false가 위의 조건의 결과가된다.

・참(true)과 거짓(false)이 나오는 식
 - 비교연산자와 논리연산자를 이용한 식의 결과는 참이나 거짓이 결과로 나온다.
 - 비교연산자: ==, !=, <, >, <=, >=
 - 논리연산자: &&(and), ||(or), &(and), |(or), ^(exclusive or/배타적 논리합), !(부정연산자/참을 거짓으로, 거짓을 참으로)

・비교연산자란?
 - 10은 5보다 크다. 참인가? 거짓인가? 자바에서 표현하면 다음과 같다. 10 > 5
 - 위의 식의 결과를 변수에 저장하고 싶다면? 아래와 같이 표현한다. flag는 논리형 타입 변수로 false로 초기화 된다.
   그리고 나서 10이 5보다 크다가 참이라면 flag는 true값을 가지게 된다.
   boolean flag = false;
   flag = 10 > 5;

・논리연산자 and(&&)와 or(||)
 - a는 20보다 크고, a는 50보다 작다. 라는 표현은 자바에서 다음과 같이 표현한다.
   a > 20 && a <50
 - a는 20보다 크거나, a는 50보다 작다. 라는 표현은 자바에서 다음과 같이 표현한다.
   a > 20 || a < 50
 - 2가지 조건을 모두 만족해야 하는 경우엔 and연산자인 &&를 사용하고, 2가지 조건중 하나만 만족해도 될 경우에는 ||를 사용한다.
 - && 대신에 &를, || 대신에 | 를 사용해도 같은 결과가 나온다. 차이점은 &&, || 2개 사용될 경우 앞의 식이 거짓이면 뒤의 식은
   실행하지않는다. 하나일 경우 앞의 식이 거짓이어도 뒤의 식이 실행된다.

・논리연산자 ^ (exclusive-or 또는 XOR이라고 함/ 배타적 논리합)
 - 2개의 식이 논리 값이 서로 다를 경우 참이 된다. 아래의 식이 참이려면 한쪽은 참이고, 한쪽은 거짓이 나와야 한다.
   예를 들어 a가 31이라는 값을 가질 경우 true & false가 되니 이 때 결과는 참이 나온다.
   a > 10 ^ a < 20

・부정연산자 !
 - 논리형 값을 부정한다. true는 false로 바뀌고, false는 true로 바뀐다. 10은 5보다 크다는 참이다.
   하지만 그 결과를 부정하게 되니 논리형 변수 a에는 false가 저장되게 된다.
   boolean a = !(10 > 5);

・정수형 타입 byte, short, int, long
 - byte 타입은 1byte 크기의 정수값을 가질 수 있다.
 - short 타입은 2byte 크기의 정수값을 가질 수 있다.
 - int 타입은 4byte 크기의 정수값을 가질 수 있다.
 - long 타입은 4byte 크기의 정수값을 가질 수 있다.
 - 리터럴 값인 숫자 5는 int 타입이다.
 - 리터럴 값인 수자 5L은 long 타입이다. (숫자뒤에 L또는 l이 붙지만 소문자 l은 숫자1처럼 보일 수 있으므로 될수있으면 대문자 L로 쓴다.)

・실수형 타입 float, double
 - float 타입은 4byte크기의 실수 값을 가질 수 있다.
 - double 타입은 8byte크기의 실수 값을 가질 수 있다.
 - 리터럴 값인 숫자 5.2는 double 타입이다.
 - 리터럴 값인 숫자 5.2f는 float타입이다. (숫자 뒤에 F 또는 f가 붙는다)